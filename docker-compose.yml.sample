version: '3.7'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "200k"
    max-file: "5"

x-postgresql:
  &default-postgresql
  image: postgres:10
  user: "${UID:-1000}:${GID:-1000}"
  volumes:
    - ./.docker/postgresql:/var/lib/postgresql/data
    - ./docker/postgresql/initdb.d:/docker-entrypoint-initdb.d/:ro # exécuté automatiquement à la création de la base
    - ./project/app/Config/sql/:/data:ro # pour pouvoir exécuter manuellement les scripts applicatifs
    - /etc/passwd:/etc/passwd:ro
  logging: *default-logging

  x-postgresql-env:
    &default-postgresql-env
    POSTGRES_DB: webrsa
    POSTGRES_USER: webrsa
    POSTGRES_PASSWORD: webrsa


services:
  php:
    build:
      context: ./docker/php
      args:
        - "VERSION=7.2-1.10"
    working_dir: /srv
    volumes:
      - .:/srv
      - ./.env.local:/.env:ro
    logging: *default-logging

  webrsa.docker.localhost:
    build:
      context: ./docker/apache
      args:
        - "VERSION=2.4"
        - 'PHP_FPM_HOST=php'
        - "APACHE_PORT=8020"
        - 'CONF_FILE=appli_webrsa.conf'
      dockerfile: Dockerfile
    depends_on:
      - php
    volumes:
      - .:/srv/:ro
      - ~/.composer/:/home/.composer
    ports:
      - '8020:8020'
    logging: *default-logging

  postgresql:
    <<: *default-postgresql
    environment:
      <<: *default-postgresql-env
      PGDATA: /var/lib/postgresql/data/pgdata # custom PGDATA
    ports:
      - "5432:5432" # port mapping

  # Rajouter autant de services postgresql (avec des noms différents) que nécessaire
  # Il faut penser à modifier : le nom du service, PGDATA et le port
  # postgresql_XXXXXX:
  #   <<: *default-postgresql
  #   environment:
  #     <<: *default-postgresql-env
  #     PGDATA: /var/lib/postgresql/data/pgdata_XXXXXX # custom PGDATA
  #   ports:
  #     - "5433:5432" # port mapping

  mailhog:
    image: mailhog/mailhog
    ports:
      - '1025:1025'
      - '8025:8025'
    logging: *default-logging
