<?xml version="1.0" encoding="UTF-8"?>
<project name="module-apre" default="build" basedir="./../../">
	<property name="dir.cakephp.app" value="${basedir}" />
	<property name="dir.ant.build" value="${basedir}/tmp/build/module-Apre" />
	<property name="dir.ant.artifacts" value="${dir.ant.build}/artifacts" />
	<property name="dir.ant.logs" value="${dir.ant.build}/logs" />
	<property name="dir.cakephp.tmp" value="${dir.cakephp.app}/tmp" />

	<property name="dir.phpcs.ruleset" value="${dir.cakephp.app}/Vendor/Jenkins/phpcs/ruleset-module.xml" />
	<property name="file.phpmd.ruleset" value="${dir.cakephp.app}/Vendor/Jenkins/phpmd/ruleset-module.xml" />
	<property name="file.phpunit.config" value="${dir.cakephp.app}/Vendor/Jenkins/phpunit/config-module-Apre.xml" />

	<property name="excludes" value="**/.*/**,**/Config/sql/**,**/Vendor/Netbeans/Templates/**,**/tmp/**" />
	<property name="words" value="apre Apre etatliquidatif Etatliquidatif etatsliquidatifs Etatsliquidatifs acccreaentr Acccreaentr accscreaentr Accscreaentr acqmatprof Acqmatprof acqsmatsprofs Acqsmatsprofs actprof Actprof actsprofs Actsprofs amenaglogt Amenaglogt amenagslogts Amenagslogts formpermfimo Formpermfimo formspermsfimo Formspermsfimo formqualif Formqualif formsqualifs Formsqualifs locvehicinsert Locvehicinsert locsvehicinsert Locsvehicinsert permisb Permisb" />

	<target name="init">
		<exec executable="bash" failonerror="on" logerror="on" outputproperty="includes.php">
		  <arg value="-c"/>
		  <arg value="echo '${words}' | sed 's/\(\w\+\)/**\/**\1**.php/g' | sed 's/ \+/,/g'"/>
		</exec>

		<exec executable="sed" inputstring="${includes.php}" outputproperty="includes.po">
			<arg value="s/\.php/.po/g"/>
		</exec>
		<exec executable="bash" failonerror="on" logerror="on" outputproperty="iregex">
		  <arg value="-c"/>
		  <arg value="echo '${words}' | sed 's/\(\w\+\) \+/\1\\|/g' | sed 's/^\(.*\)$/.*\\(\1\\).*\\.php$/g'"/>
		</exec>
		<exec executable="bash" failonerror="on" logerror="on" outputproperty="filelist.excludepcre">
		  <arg value="-c"/>
		  <arg value="echo '${words}' | sed 's/\(\w\+\) \+/\1|/g' | sed 's/^\(.*\)$/\/^((?!\1).)*$\//g'"/>
		</exec>
		<exec executable="bash" failonerror="on" logerror="on" outputproperty="filelist.comma" dir="${dir.cakephp.app}">
		  <arg value="-c"/>
		  <arg value="find . -iregex '${iregex}' -not -iregex '.*\/Test\/.*' | sort | paste -sd ','"/>
		</exec>
		<exec executable="bash" failonerror="on" logerror="on" outputproperty="filelist.space" dir="${dir.cakephp.app}">
		  <arg value="-c"/>
		  <arg value="find . -iregex '${iregex}' -not -iregex '.*\/Test\/.*' | sort | paste -sd ' '"/>
		</exec>
	</target>

	<target name="quality" depends="init,clean,lint,phpunit,phploc,phpcs,phpmd,phpcb"/>
	<target name="build" depends="init,clean,lint,phpunit"/>

	<!-- Nettoyage des répertoires de travail -->
	<target name="clear">
		<delete dir="${dir.ant.build}" />
	</target>

	<!-- Nettoyage et création des répertoires de travail -->
	<target name="clean" depends="clear">
		<mkdir dir="${dir.ant.build}" />
		<mkdir dir="${dir.ant.build}/api" />
		<mkdir dir="${dir.ant.artifacts}" />
		<mkdir dir="${dir.ant.build}/coverage" />
		<mkdir dir="${dir.ant.logs}" />
		<mkdir dir="${dir.ant.build}/php-code-browser" />
	</target>

	<!-- Vérification de la syntaxe des fichiers .php -->
	<target name="php-lint" depends="init">
		<apply executable="php" dir="${dir.cakephp.app}" failonerror="on" logerror="on">
			<arg line="-l"/>
			<fileset
				dir="${dir.cakephp.app}"
				includes="${includes.php}"
				excludes="${excludes}" />
		</apply>
	</target>

	<!-- Vérification de la syntaxe des fichiers .po -->
	<target name="po-lint" depends="init">
		<apply executable="msgfmt" dir="${dir.cakephp.app}" failonerror="on" logerror="on">
			<arg line="-v"/>
			<arg line="-C"/>
			<arg line="-o /dev/null"/>
			<fileset
				dir="${dir.cakephp.app}"
				includes="${includes.po}"
				excludes="${excludes}" />
		</apply>
	</target>

	<!-- Vérification de la syntaxe des fichiers -->
	<target name="lint" depends="php-lint,po-lint"/>

	<!-- Tests unitaires -->
	<target name="phpunit" depends="init,clean,lint">
		<exec executable="lib/Cake/Console/cake" dir="${basedir}/.." failonerror="true">
			<arg line="test app AllApresTests
				--verbose
				--strict
				--no-colors
				--stderr
				--configuration ${file.phpunit.config}
				--log-junit ${dir.ant.logs}/phpunit.xml
				--coverage-clover ${dir.ant.logs}/phpunit.coverage.xml
				--coverage-html ${dir.ant.build}/coverage" />
		</exec>
	</target>

	<!-- Mesures du code -->
	<target name="phploc" depends="init,clean,lint">
		<exec executable="phploc" dir="${dir.cakephp.app}">
			<arg line="${filelist.space}
					--log-csv ${dir.ant.logs}/phploc.csv" />
		</exec>
	</target>

	<!-- Checkstyle -->
	<target name="phpcs" depends="init,clean,lint">
		<exec executable="phpcs"
			  dir="${dir.cakephp.app}"
			  output="${dir.ant.logs}/checkstyle.xml"
			  error="/dev/null"
			  failonerror="false">
			<arg line="${filelist.space}
				--tab-width=4
				--report=checkstyle
				--standard=${dir.phpcs.ruleset}
				--ignore=${excludes}
				--extensions=php,ctp" />
		</exec>
	</target>

	<!-- Mess detector -->
	<target name="phpmd" depends="init,clean,lint">
		<exec executable="phpmd"
			dir="${dir.cakephp.app}"
			failonerror="false">
			<arg line="${filelist.comma}
				xml
				${file.phpmd.ruleset}
				--exclude ${ignorelist}
				--reportfile ${dir.ant.logs}/phpmd.xml"/>
		</exec>
	</target>

	<!-- Code browser -->
	<target name="phpcb" depends="init,clean,lint">
		<exec executable="phpcb"
			dir="${dir.cakephp.app}"
			failonerror="false">
			<arg line="--log ${dir.ant.logs}
				--source ${dir.cakephp.app}
				--excludePCRE '${filelist.excludepcre}'
				--excludePCRE '/app\/(Test|tmp)\//'
				--output ${dir.ant.build}/php-code-browser
				--crapThreshold=10
			." />
		</exec>
	</target>
</project>