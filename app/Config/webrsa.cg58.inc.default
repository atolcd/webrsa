<?php
	/**
	 *
	 * CONFIGURATION SPÉCIFIQUE POUR LE DÉPARTEMENT
	 *
	 * On ne laisse que les configurations spécifiques pour le département
	 *
	 * ou celles qui doivent être surchargées pour le département.
	 *
	 */

	/**
	 * Paramétrage de la génération de documents PDF au moyen de Gedooo.
	 *
	 * Les clés de configuration possibles sont:
	 *	- method: la méthode permettant de générer le document de sortie; valeurs
	 *		possibles: classic, unoconv, cloudooo (ainsi que cloudooo_ancien et
	 *		unoconv_ancien)
	 *	- wsdl: l'URL du web-service, utilisé quelle que soit la méthode de
	 *		génération; exemple: http://192.168.2.35:8880/ODFgedooo/OfficeService?wsdl
	 *	- unoconv_bin: chemin vers le binaire unoconv, lorsque la méthode unoconv
	 *		ou unoconv_ancien est paramétrée; exemple: /usr/bin/unoconv
	 *	- cloudooo_host: le serveur cloudooo, lorsque la méthode cloudooo ou
	 *		cloudooo_ancien est utilisée; exemple: 192.168.2.35
	 *	- cloudooo_port: le port du serveur cloudooo, lorsque la méthode cloudooo
	 *		ou cloudooo_ancien est utilisée; exemple: 8012
	 *	- debug_export_data: permet d'exporter les données envoyées en plus des noms
	 *		des variables dans un fichier du répertoire app/tmp/logs lorsque l'on
	 *		n'est pas en mode production; false (par défaut) ou true
	 *	- dont_force_newlines: pour que les retours à la ligne ne soient pas forcés
	 *		(ancien comportement de unoconv et cloudooo); false (par défaut) ou true
	 *	- filter_vars: permet de filtrer les variables envoyées à l'impression en
	 *		analysant les variables utilisateur définies dans le modèle ; false
	 *		(par défaut) ou true
	 */
	/**
	 * Nouvelle façon de paramétrer la génération de documents PDF via Gedooo.
	 *
	 * Ci-dessous, l'ensemble des clés de configuration possibles.
	 *
	 * array(
	 *	'method' => 'classic', // classic, unoconv, cloudooo
	 *	// Ancien serveur Gedooo
	 *	// 'wsdl' => 'http://gedooo.test.adullact.org:8080/axis2/services/OfficeService?wsdl',
	 *	// Nouveau serveur Gedooo
	 *	'wsdl' => 'http://gedooo.test.adullact.org:8880/ODFgedooo/OfficeService?wsdl',
	 *	// Pour Unoconv
	 *	'unoconv_bin' => '/home/cbuffin/Bureau/1/usr/bin/unoconv',
	 *	// Pour Cloudooo
	 *	'cloudooo_host' => 'xx.xx.xx.xx',
	 *	'cloudooo_port' => '8012'
	 * )
	 */
	Configure::write(
		'Gedooo',
		array(
			'method' => 'cloudooo',
			'wsdl' => 'http://127.0.0.1:8080/ODFgedooo/OfficeService?wsdl',
			'cloudooo_host' => '172.31.76.12',
			'cloudooo_port' => '8011',
			'debug_export_data' => true
		)
	);

	/**
	 *   Paramètre à renseigner pour le CG58 pour le lien pointant sur leur application
	 */
	Configure::write( 'UI.menu.lienDemandeur', 'http://intranet.cg58.fr/applications/xbase/xbase_list.php?DBNAME=xbase_rsa&APPCODE=ALLOCATAIRE&LIST=Fichier RSA&NAV=NO-L&DISPLAYSTYLE=DISPLAYSTD&nCurPage=0&FILTER=;;;;;%s;;;;' );

	/**
	 * Durée du délai (en jours) accordé pour la création d'un nouveau contrat pour
	 * le thème "non orientation professionelle"
	 *
	 * @deprecated
	 */
	Configure::write( 'Nonorientationproep58.delaiCreationContrat', 60 );

	/**
	 * Durée de la tolérance (en nombre de jours) par-rapport à la date de fin
	 * d'un CER que l'on voudrait passer en EP pour le thème "sanctionep58" et
	 * l'origine "nonrespectcer"
	 */
	Configure::write( 'Sanctionep58.nonrespectcer.dureeTolerance', 365 );

	/**
	 * Permet d'obtenir le nombre de résultats pour la "Sélection des allocataires
	 * radiés de Pôle Emploi" et la "Sélection des allocataires non inscrits à
	 * Pôle Emploi".
	 *
	 * @param boolean
	 */
	Configure::write( 'Optimisations.Sanctionseps58.progressivePaginate', false );

    /**
	 * Variable contenant une chaîne de caractères (stockée en base) pour le
	 * n° de convention annuelle d'objectifs et de moyens
     * (unqiue par année et qui devant être changé chaque année)
     * Cui.numconventionobj
	 */
    Configure::write( 'Cui.Numeroconvention', '066130000100' );

	/**
	 * Permet d'indiquer l'id technique (ou les ids techniques) des enregistrements
	 * de la table structuresreferentes afin de limiter les résultats des
	 * recherches "Sélection des allocataires radiés de Pôle Emploi" et "Sélection
	 * des allocataires non inscrits à Pôle Emploi" aux allocataires actuellement
	 * orientés Pôle Emploi.
	 *
	 * @param integer|array
	 * @default null
	 */
	Configure::write( 'Sanctionseps58.selection.structurereferente_id', 2 );

	/**
	 * Permet d'obtenir le nombre de résultats pour la "Sélection des allocataires
	 * radiés de Pôle Emploi" et la "Sélection des allocataires non inscrits à
	 * Pôle Emploi".
	 *
	 * @param boolean
	 */
	Configure::write( 'Optimisations.Sanctionseps58.progressivePaginate', false );

	/**
	 * Intervalle entre la date de la commission pour une des thématiques de
	 * sanctions des EP du CG 58 et la date prévisionnelle de radiation du RSA.
	 *
	 * Utilisé dans les écrans
	 *	- « Eq. Pluri. » → « 5. Gestion des sanctions » → « Gestion des sanctions »
	 *	- « Eq. Pluri. » → « 5. Gestion des sanctions » → « Visualisation des sanctions »
	 *	- Menu du dossier RSA → sous-menu demandeur ou conjoint → « Accompagnement du parcours » → « Historique des EPs » → lien « Passage »
	 *
	 * @var string
	 * @default null
	 */
	Configure::write( 'Decisionsanctionep58.datePrevisionnelleRadiation', '8 months' );

	/**
	 * Permet de spécifier les noms de serveurs servant d'environnement de
	 * production afin que les mails ne soient pas envoyés à leurs destinataires
	 * "normaux", mais à l'expéditeur du mail.
	 *
	 * @see WebrsaEmailConfig::isTestEnvironment()
	 *
	 * @param array
	 *
	 * @default null
	 */
	Configure::write( 'WebrsaEmailConfig.testEnvironments', array( 'skoltest.cg58.fr' ) );

	/**
	 * Durée du délai (en jours) accordé pour la création d'un nouveau contrat pour
	 * les dossiers de COV "non orientation professionelle"
	 */
	Configure::write( 'Nonorientationprocov58.delaiCreationContrat', 60 );

	/**
	 * Ordre d'affichage des dossiers EP selon différentes actions (voir l'URL,
	 * ajouter le suffixe .order).
	 *
	 * Les clés de configuration sont les suivantes (CG 58, 66 et 93):
	 * 	- Dossierseps.choose.order
	 * 	- Commissionseps.decisionep.order
	 * 	- Commissionseps.decisioncg.order (CG 66 et 93 uniquement)
	 * 	- Commissionseps.printOrdresDuJour.order
	 * 	- Commissionseps.traiterep.order
	 * 	- Commissionseps.traitercg.order (CG 66 et 93 uniquement)
	 */
	Configure::write( 'Dossierseps.choose.order', array( 'Personne.nom', 'Personne.prenom' ) );
	Configure::write( 'Commissionseps.decisionep.order', array( 'Personne.nom', 'Personne.prenom' ) );
	Configure::write( 'Commissionseps.printOrdresDuJour.order', array( 'Adresse.nomcom' ) );
	Configure::write( 'Commissionseps.traiterep.order', array( 'Personne.nom', 'Personne.prenom' ) );

	/**
	 * Validation parametrable pour l'allowEmpty
	 */
	Configure::write('ValidateAllowEmpty.Adresse.libtypevoie', false);

	/**
	 * Permet de désactiver le "cadenas" situé en haut à droite
	 */
	Configure::write( 'Etatjetons.enabled', false );

	/**
	 * Permet de désactiver l'Editeur de requêtes
	 */
	Configure::write( 'Requestmanager.enabled', false );

	/**
	 * Utilisation de la table AdresseCanton pour utiliser les cantons calculé au préalable par Console (CRON)
	 */
	Configure::write( 'Canton.useAdresseCanton', (boolean)Configure::read( 'CG.cantons' ) );

	/**
	 * Alerte pour le changement d'adresse
	 * delai en nombre de mois
	 */
	Configure::write( 'Alerte.changement_adresse.enabled', false );
	Configure::write( 'Alerte.changement_adresse.delai', 2 );

	/**
	 * Permet d'activer l'utilisation du module CUI.
	 *
	 * @var boolean
	 * @default null
	 */
	Configure::write( 'Module.Cui.enabled', false );

	/**
	 * Affiche les anciens moteurs de cohorte et de recherche pour comparaison
	 */
	Configure::write('Anciensmoteurs.enabled', false);

	/**
	 * Export CSV des droits des groupes
	 */
	Configure::write('Module.Synthesedroits.enabled', true);

	/**
	 * Nouveaux moteurs de recherche, permet d'afficher la liste des codes INSEE
	 * sous forme de cases à cocher multiples plutôt que sous forme de liste
	 * déroulante.
	 *
	 * La clé "multiple" permet d'activer cette fonctionnalité.
	 * La clé "multiple_larger_1" permet de retrouver la liste déroulante
	 * "classique" si le nombre de codes INSEE est inférieur ou égal à 1.
	 *
	 * @var boolean
	 * @default null
	 */
	Configure::write(
		'ConfigurableQuery.common.filters.Adresse.numcom',
		array(
			'multiple' => false,
			'multiple_larger_1' => false
		)
	);

	/**
	 * Affichage de Fleches pour effectuer un order sur les colonnes de résultat
	 */
	Configure::write('ConfigurableQuery.common.two_ways_order.enabled', false);

	/**
	 * Nouveau système d'attribution des droits (par Controllers)
	 */
	Configure::write('Module.Attributiondroits.enabled', false);

	/**
	 * Visualisation des données CAF d'une personne
	 */
	Configure::write('Module.Donneescaf.enabled', false);

	/**
	 * Configuration des plages horaires d'accès à l'application.
	 *
	 * Lorsque cette fonctionnalité est activée, il n'est possible d'être connecté
	 * que dans une plage horaire et hormis certains jours de la semaine.
	 * Il est possible de spécifier certains groupes d'utilisateurs qui ne seront
	 * pas affectés par cette limitation.
	 *
	 * Les clés de configuration sont les suivantes:
	 *	- enabled: mettre à true pour utiliser cette fonctionnalité; booléen, null
	 *	  (false) par défaut
	 *	- heure_debut: l'heure à partir de laquelle (incluse) les utilisateurs
	 *	  peuvent se connecter, integer entre 0 et 23; 1 par défaut
	 *	- heure_fin: l'heure jusqu'à laquelle (incluse) les utilisateurs peuvent
	 *	  se connecter; integer entre 0 et 23; 23 par défaut
	 *	- jours_weekend: les jours de la semaine qui constituent le week-end;
	 *	  array de string parmi 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun';
	 *	  array( 'Sat', 'Sun' ) par défaut
	 *	- groupes_acceptes: ids techniques des groupes d'utilisateurs non soumis
	 *	  à ces restrictions (ex. les Administrateurs); array d'integers; array()
	 *	  par défaut
	 *
	 * La configuration est vérifiée dans la partie "Administration" > "Vérification
	 * de l'application".
	 */
	Configure::write(
		'Module.PlagesHoraires',
		array(
			'enabled' => false,
			'heure_debut' => 8,
			'heure_fin' => 19,
			'jours_weekend' => array( 'Sat', 'Sun' ),
			'groupes_acceptes' => array( 1 )
		)
	);

	/**
	 * Suffix des fichiers de traductions spécialisés pour le CG
	 * ex: controller_action_suffix.po -> dossiers_index_cg01.po
	 */
	Configure::write('WebrsaTranslator.suffix', 'cg'.Configure::read('Cg.departement'));

	/**
	 * /!\ N'activer ce module que sur une période courte /!\
	 * Permet de logger tous les appels de pages, active également l'accès au module de visualisation dans administration
	 * Désactiver et supprimer app/tmp/logs/trace.log après utilisation
	 */
	Configure::write('Module.Logtrace.enabled', false);
	Configure::write('Module.Logtrace.total_duration', 60 * 60 * 1); // Durée en secondes du graph (max 32746)

	/**
	 * Active le module date picker (calendrier javascript)
	 */
	Configure::write('Module.Datepicker.enabled', false);

	/**
	 * Permet de définir l'id du typerdv pour les Rendezvous pour l'élaboration d'un CER
	 */
	Configure::write('Rendezvous.elaborationCER.typerdv_id', 13);

	/**
	 * Permet le redimensionnement automatique des textarea
	 *
	 * textarea.auto_resize.all => tout les textarea
	 * textarea.auto_resize.controllername.all => tout les textarea d'un controlleur en particulier
	 * textarea.auto_resize.controllername.action => tout les textarea d'un controlleur et d'une action en particulier
	 */
	Configure::write('textarea.auto_resize.all', false);

	/**
	 * Filtre de recherche par Prestations
	 * Il est possible de remplacer la clef "common" par "Controller.action"
	 * pour spécifier par Controller et par action
	 * Si "common" est spécifié en plus du "Controller.action",
	 * la configuration de "Controller.action" prend le dessus
	 *
	 * Valeurs possibles (array) :
	 * 0 = Sans prestation
	 * 1 = Demandeur ou Conjoint
	 * 'DEM' = Demandeur
	 * 'CJT' = Conjoint
	 * 'ENF' = Enfant
	 * 'AUT' = Autre
	 * 'RDO' = Responsable du dossier
	 */
	Configure::write('ConfigurableQuery.common.filters.has_prestation', array());

	/**
	 * Permet l'affichage des erreurs cachés
	 */
	Configure::write('Module.DisplayValidationErrors.enabled', true);

	/**
	 * Permet de filtrer les modules visibles dans l'onglet "Droits" des formulaires
	 * d'ajout et de modification des groupes et des utilisateurs en fonction du
	 * département connecté ainsi que des modules activés.
	 *
	 * L'idée est que les modules en question ne sont normalement pas accessibles
	 * et qu'il ne font donc qu'ajouter de la complexité dans ces écrans de droits.
	 *
	 * Une valeur "null" ou "false" filtre les permissions, une valeur "true" ne
	 * les filtre pas (comme avant la version 3.2.0).
	 *
	 * @default null
	 */
	Configure::write( 'Module.Permissions.all', false );

	/**
	 * Permet de faire apparaître ou non dans le menu "Administration" le
	 * sous-menu "Flux CNAF" qui ne sert qu'aux développeurs car ces écrans
	 * présentent le format technique des flux CNAF.
	 */
	Configure::write( 'Module.Fluxcnaf.enabled', false );

	/**
	 * Nombre d'enregistrements de la table correspondancespersonnes à sauvegarder
	 * par "tranche" via le shell CorrespondancepersonneShell afin d'éviter de
	 * saturer la mémoire lors du traitement.
	 *
	 * @type integer
	 * @default 250000
	 */
	Configure::write( 'Correspondancepersonne.max', 250000 );

	/**
	 * Permet d'ajouter une orientation "Non orienté" aux bénéficiaires d'un foyer
	 * dès lors qu'ils sont soumis à droits et devoirs et que l'on ajoute ou
	 * modifie une personne du foyer ou que l'on ajoute ou modifie une ressource
	 * d'une personne du foyer.
	 *
	 * @type boolean
	 * @default null|false
	 */
	Configure::write( 'Foyer.refreshSoumisADroitsEtDevoirs.ajoutOrientstruct', null );

	/**
	 * Intervalle entre la date de la commission pour une des thématiques de
	 * sanctions des EP du CG 58 et la date prévisionnelle de radiation du RSA.
	 *
	 * Utilisé dans les écrans
	 *	- « Eq. Pluri. » → « 5. Gestion des sanctions » → « Gestion des sanctions »
	 *	- « Eq. Pluri. » → « 5. Gestion des sanctions » → « Visualisation des sanctions »
	 *	- Menu du dossier RSA → sous-menu demandeur ou conjoint → « Accompagnement du parcours » → « Historique des EPs » → lien « Passage »
	 *
	 * @var string
	 * @default null
	 */
	Configure::write( 'Decisionsanctionep58.datePrevisionnelleRadiation', '8 months' );

	/**
	 * Durée du délai (en jours) accordé pour la création d'un nouveau contrat pour
	 * les dossiers de COV "non orientation professionelle"
	 */
	Configure::write( 'Nonorientationprocov58.delaiCreationContrat', 60 );

	/**
	 * Valeurs par défaut des filtres pour le moteur de recherche "Recherches" >
	 * "Par dossiers COV" > "Demande de maintien dans le social (nouveau)"
	 */
	Configure::write(
		'Filtresdefaut.Nonorientationsproscovs58_cohorte',
		array(
			'Search' => array(
				'Contratinsertion' => array(
					'df_ci_from' => strtotime( '-1 week' ),
					'df_ci_to' => strtotime( 'now' )
				),
				'Pagination' => array(
					'nombre_total' => 0
				)
			)
		)
	);

	/**
	 * Blocage des thématiques pour les EP
	 */
	Configure::write(
		'Blocage.thematique.ep',
		array (
			'nonorientationproep58',
			'regressionorientationep58',
		)
	);
?>